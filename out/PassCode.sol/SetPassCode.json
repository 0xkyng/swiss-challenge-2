{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_passCode",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getCode",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newCode",
          "type": "string"
        }
      ],
      "name": "setNewCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161075738038061075783398101604081905261002f91610058565b600061003b82826101aa565b5050610269565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561006b57600080fd5b82516001600160401b038082111561008257600080fd5b818501915085601f83011261009657600080fd5b8151818111156100a8576100a8610042565b604051601f8201601f19908116603f011681019083821181831017156100d0576100d0610042565b8160405282815288868487010111156100e857600080fd5b600093505b8284101561010a57848401860151818501870152928501926100ed565b600086848301015280965050505050505092915050565b600181811c9082168061013557607f821691505b60208210810361015557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101a557600081815260208120601f850160051c810160208610156101825750805b601f850160051c820191505b818110156101a15782815560010161018e565b5050505b505050565b81516001600160401b038111156101c3576101c3610042565b6101d7816101d18454610121565b8461015b565b602080601f83116001811461020c57600084156101f45750858301515b600019600386901b1c1916600185901b1785556101a1565b600085815260208120601f198616915b8281101561023b5788860151825594840194600190910190840161021c565b50858210156102595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6104df806102786000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806343378ab21461003b578063ea87963414610050575b600080fd5b61004e6100493660046101c6565b61006e565b005b61005861011e565b604051610065919061029b565b60405180910390f35b8060405160200161007f91906102ce565b6040516020818303038152906040528051906020012060006040516020016100a79190610324565b604051602081830303815290604052805190602001200361010e5760405162461bcd60e51b815260206004820152601860248201527f5061737320636f646520616c7265616479206578697374730000000000000000604482015260640160405180910390fd5b600061011a82826103e9565b5050565b60606000805461012d906102ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610159906102ea565b80156101a65780601f1061017b576101008083540402835291602001916101a6565b820191906000526020600020905b81548152906001019060200180831161018957829003601f168201915b5050505050905090565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156101d857600080fd5b813567ffffffffffffffff808211156101f057600080fd5b818401915084601f83011261020457600080fd5b813581811115610216576102166101b0565b604051601f8201601f19908116603f0116810190838211818310171561023e5761023e6101b0565b8160405282815287602084870101111561025757600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561029257818101518382015260200161027a565b50506000910152565b60208152600082518060208401526102ba816040850160208701610277565b601f01601f19169190910160400192915050565b600082516102e0818460208701610277565b9190910192915050565b600181811c908216806102fe57607f821691505b60208210810361031e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354610332816102ea565b6001828116801561034a576001811461035f5761038e565b60ff198416875282151583028701945061038e565b8760005260208060002060005b858110156103855781548a82015290840190820161036c565b50505082870194505b50929695505050505050565b601f8211156103e457600081815260208120601f850160051c810160208610156103c15750805b601f850160051c820191505b818110156103e0578281556001016103cd565b5050505b505050565b815167ffffffffffffffff811115610403576104036101b0565b6104178161041184546102ea565b8461039a565b602080601f83116001811461044c57600084156104345750858301515b600019600386901b1c1916600185901b1785556103e0565b600085815260208120601f198616915b8281101561047b5788860151825594840194600190910190840161045c565b50858210156104995787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212203b13050db8a573f8357720b9b8125f0d33b23d53bfd32100f9b216e8e7c799d864736f6c63430008150033",
    "sourceMap": "65:509:2:-:0;;;122:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;169:8;:20;180:9;169:8;:20;:::i;:::-;;122:74;65:509;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:3;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:3;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:3;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:3;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:3;;;3627:26;3578:89;-1:-1:-1;;2382:1:3;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:3;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:3;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:3;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:3:o;:::-;65:509:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806343378ab21461003b578063ea87963414610050575b600080fd5b61004e6100493660046101c6565b61006e565b005b61005861011e565b604051610065919061029b565b60405180910390f35b8060405160200161007f91906102ce565b6040516020818303038152906040528051906020012060006040516020016100a79190610324565b604051602081830303815290604052805190602001200361010e5760405162461bcd60e51b815260206004820152601860248201527f5061737320636f646520616c7265616479206578697374730000000000000000604482015260640160405180910390fd5b600061011a82826103e9565b5050565b60606000805461012d906102ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610159906102ea565b80156101a65780601f1061017b576101008083540402835291602001916101a6565b820191906000526020600020905b81548152906001019060200180831161018957829003601f168201915b5050505050905090565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156101d857600080fd5b813567ffffffffffffffff808211156101f057600080fd5b818401915084601f83011261020457600080fd5b813581811115610216576102166101b0565b604051601f8201601f19908116603f0116810190838211818310171561023e5761023e6101b0565b8160405282815287602084870101111561025757600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561029257818101518382015260200161027a565b50506000910152565b60208152600082518060208401526102ba816040850160208701610277565b601f01601f19169190910160400192915050565b600082516102e0818460208701610277565b9190910192915050565b600181811c908216806102fe57607f821691505b60208210810361031e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354610332816102ea565b6001828116801561034a576001811461035f5761038e565b60ff198416875282151583028701945061038e565b8760005260208060002060005b858110156103855781548a82015290840190820161036c565b50505082870194505b50929695505050505050565b601f8211156103e457600081815260208120601f850160051c810160208610156103c15750805b601f850160051c820191505b818110156103e0578281556001016103cd565b5050505b505050565b815167ffffffffffffffff811115610403576104036101b0565b6104178161041184546102ea565b8461039a565b602080601f83116001811461044c57600084156104345750858301515b600019600386901b1c1916600185901b1785556103e0565b600085815260208120601f198616915b8281101561047b5788860151825594840194600190910190840161045c565b50858210156104995787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212203b13050db8a573f8357720b9b8125f0d33b23d53bfd32100f9b216e8e7c799d864736f6c63430008150033",
    "sourceMap": "65:509:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;202:275;;;;;;:::i;:::-;;:::i;:::-;;483:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;202:275;362:8;345:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;335:37;;;;;;309:8;292:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;282:37;;;;;;:90;265:177;;397:34;;-1:-1:-1;;;397:34:2;;3583:2:3;397:34:2;;;3565:21:3;3622:2;3602:18;;;3595:30;3661:26;3641:18;;;3634:54;3705:18;;397:34:2;;;;;;;265:177;451:8;:19;462:8;451;:19;:::i;:::-;;202:275;:::o;483:89::-;525:13;557:8;550:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;483:89;:::o;14:127:3:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:922;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;353:18;394:2;386:6;383:14;380:34;;;410:1;407;400:12;380:34;448:6;437:9;433:22;423:32;;493:7;486:4;482:2;478:13;474:27;464:55;;515:1;512;505:12;464:55;551:2;538:16;573:2;569;566:10;563:36;;;579:18;;:::i;:::-;654:2;648:9;622:2;708:13;;-1:-1:-1;;704:22:3;;;728:2;700:31;696:40;684:53;;;752:18;;;772:22;;;749:46;746:72;;;798:18;;:::i;:::-;838:10;834:2;827:22;873:2;865:6;858:18;913:7;908:2;903;899;895:11;891:20;888:33;885:53;;;934:1;931;924:12;885:53;990:2;985;981;977:11;972:2;964:6;960:15;947:46;1035:1;1013:15;;;1030:2;1009:24;1002:35;;;;-1:-1:-1;1017:6:3;146:922;-1:-1:-1;;;;;146:922:3:o;1073:250::-;1158:1;1168:113;1182:6;1179:1;1176:13;1168:113;;;1258:11;;;1252:18;1239:11;;;1232:39;1204:2;1197:10;1168:113;;;-1:-1:-1;;1315:1:3;1297:16;;1290:27;1073:250::o;1328:396::-;1477:2;1466:9;1459:21;1440:4;1509:6;1503:13;1552:6;1547:2;1536:9;1532:18;1525:34;1568:79;1640:6;1635:2;1624:9;1620:18;1615:2;1607:6;1603:15;1568:79;:::i;:::-;1708:2;1687:15;-1:-1:-1;;1683:29:3;1668:45;;;;1715:2;1664:54;;1328:396;-1:-1:-1;;1328:396:3:o;1729:289::-;1860:3;1898:6;1892:13;1914:66;1973:6;1968:3;1961:4;1953:6;1949:17;1914:66;:::i;:::-;1996:16;;;;;1729:289;-1:-1:-1;;1729:289:3:o;2023:380::-;2102:1;2098:12;;;;2145;;;2166:61;;2220:4;2212:6;2208:17;2198:27;;2166:61;2273:2;2265:6;2262:14;2242:18;2239:38;2236:161;;2319:10;2314:3;2310:20;2307:1;2300:31;2354:4;2351:1;2344:15;2382:4;2379:1;2372:15;2236:161;;2023:380;;;:::o;2534:842::-;2662:3;2691:1;2724:6;2718:13;2754:36;2780:9;2754:36;:::i;:::-;2809:1;2826:18;;;2853:133;;;;3000:1;2995:356;;;;2819:532;;2853:133;-1:-1:-1;;2886:24:3;;2874:37;;2959:14;;2952:22;2940:35;;2931:45;;;-1:-1:-1;2853:133:3;;2995:356;3026:6;3023:1;3016:17;3056:4;3101:2;3098:1;3088:16;3126:1;3140:165;3154:6;3151:1;3148:13;3140:165;;;3232:14;;3219:11;;;3212:35;3275:16;;;;3169:10;;3140:165;;;3144:3;;;3334:6;3329:3;3325:16;3318:23;;2819:532;-1:-1:-1;3367:3:3;;2534:842;-1:-1:-1;;;;;;2534:842:3:o;3734:545::-;3836:2;3831:3;3828:11;3825:448;;;3872:1;3897:5;3893:2;3886:17;3942:4;3938:2;3928:19;4012:2;4000:10;3996:19;3993:1;3989:27;3983:4;3979:38;4048:4;4036:10;4033:20;4030:47;;;-1:-1:-1;4071:4:3;4030:47;4126:2;4121:3;4117:12;4114:1;4110:20;4104:4;4100:31;4090:41;;4181:82;4199:2;4192:5;4189:13;4181:82;;;4244:17;;;4225:1;4214:13;4181:82;;;4185:3;;;3825:448;3734:545;;;:::o;4455:1352::-;4581:3;4575:10;4608:18;4600:6;4597:30;4594:56;;;4630:18;;:::i;:::-;4659:97;4749:6;4709:38;4741:4;4735:11;4709:38;:::i;:::-;4703:4;4659:97;:::i;:::-;4811:4;;4875:2;4864:14;;4892:1;4887:663;;;;5594:1;5611:6;5608:89;;;-1:-1:-1;5663:19:3;;;5657:26;5608:89;-1:-1:-1;;4412:1:3;4408:11;;;4404:24;4400:29;4390:40;4436:1;4432:11;;;4387:57;5710:81;;4857:944;;4887:663;2481:1;2474:14;;;2518:4;2505:18;;-1:-1:-1;;4923:20:3;;;5041:236;5055:7;5052:1;5049:14;5041:236;;;5144:19;;;5138:26;5123:42;;5236:27;;;;5204:1;5192:14;;;;5071:19;;5041:236;;;5045:3;5305:6;5296:7;5293:19;5290:201;;;5366:19;;;5360:26;-1:-1:-1;;5449:1:3;5445:14;;;5461:3;5441:24;5437:37;5433:42;5418:58;5403:74;;5290:201;-1:-1:-1;;;;;5537:1:3;5521:14;;;5517:22;5504:36;;-1:-1:-1;4455:1352:3:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getCode()": "ea879634",
    "setNewCode(string)": "43378ab2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_passCode\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newCode\",\"type\":\"string\"}],\"name\":\"setNewCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PassCode.sol\":\"SetPassCode\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/PassCode.sol\":{\"keccak256\":\"0xa5622ffc15c8ca3a613d0f3bb0336f77363f82acbb2fde7e5099c6a575bd90b1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2068ff2baeed15e4ef8cdf8477eee2a0f778b4a786c8af895fe6abaef1c5cc58\",\"dweb:/ipfs/QmQq7BnYpEFtkz7xCZdCwrjxVNf7fRbKR5BvnLReji2jem\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_passCode",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCode",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newCode",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNewCode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/PassCode.sol": "SetPassCode"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/PassCode.sol": {
        "keccak256": "0xa5622ffc15c8ca3a613d0f3bb0336f77363f82acbb2fde7e5099c6a575bd90b1",
        "urls": [
          "bzz-raw://2068ff2baeed15e4ef8cdf8477eee2a0f778b4a786c8af895fe6abaef1c5cc58",
          "dweb:/ipfs/QmQq7BnYpEFtkz7xCZdCwrjxVNf7fRbKR5BvnLReji2jem"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/PassCode.sol",
    "id": 144,
    "exportedSymbols": {
      "SetPassCode": [
        143
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:536:2",
    "nodes": [
      {
        "id": 93,
        "nodeType": "PragmaDirective",
        "src": "39:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 143,
        "nodeType": "ContractDefinition",
        "src": "65:509:2",
        "nodes": [
          {
            "id": 95,
            "nodeType": "VariableDeclaration",
            "src": "92:23:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "passCode",
            "nameLocation": "107:8:2",
            "scope": 143,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 94,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "92:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 105,
            "nodeType": "FunctionDefinition",
            "src": "122:74:2",
            "nodes": [],
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "159:37:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "passCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "169:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "_passCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "180:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "169:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "169:20:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_passCode",
                  "nameLocation": "148:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "134:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "133:25:2"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:0:2"
            },
            "scope": 143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 134,
            "nodeType": "FunctionDefinition",
            "src": "202:275:2",
            "nodes": [],
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "255:222:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 113,
                              "name": "passCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "309:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "id": 111,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "292:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "296:12:2",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "292:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 110,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "282:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "282:37:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 119,
                              "name": "_newCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "362:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 117,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "345:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "349:12:2",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "345:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "345:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 116,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "335:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "335:37:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "282:90:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 128,
                  "nodeType": "IfStatement",
                  "src": "265:177:2",
                  "trueBody": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "383:59:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5061737320636f646520616c726561647920657869737473",
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "404:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74b74cee3a8a0a7813f06d46de6093f99f1827b809afef1680fa20b7470e71fd",
                                "typeString": "literal_string \"Pass code already exists\""
                              },
                              "value": "Pass code already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_74b74cee3a8a0a7813f06d46de6093f99f1827b809afef1680fa20b7470e71fd",
                                "typeString": "literal_string \"Pass code already exists\""
                              }
                            ],
                            "id": 123,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "397:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "397:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "397:34:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "passCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "451:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 130,
                      "name": "_newCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "462:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "451:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "451:19:2"
                }
              ]
            },
            "functionSelector": "43378ab2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewCode",
            "nameLocation": "211:10:2",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_newCode",
                  "nameLocation": "236:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "222:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:24:2"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:0:2"
            },
            "scope": 143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 142,
            "nodeType": "FunctionDefinition",
            "src": "483:89:2",
            "nodes": [],
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "540:32:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "passCode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 95,
                    "src": "557:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "550:15:2"
                }
              ]
            },
            "functionSelector": "ea879634",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCode",
            "nameLocation": "492:7:2",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:2:2"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "525:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:15:2"
            },
            "scope": 143,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SetPassCode",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          143
        ],
        "name": "SetPassCode",
        "nameLocation": "74:11:2",
        "scope": 144,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 2
}