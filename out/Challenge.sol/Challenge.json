{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_challenge",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getChallenge",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newChallenge",
          "type": "string"
        }
      ],
      "name": "setNewChallenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161075738038061075783398101604081905261002f91610058565b600061003b82826101aa565b5050610269565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561006b57600080fd5b82516001600160401b038082111561008257600080fd5b818501915085601f83011261009657600080fd5b8151818111156100a8576100a8610042565b604051601f8201601f19908116603f011681019083821181831017156100d0576100d0610042565b8160405282815288868487010111156100e857600080fd5b600093505b8284101561010a57848401860151818501870152928501926100ed565b600086848301015280965050505050505092915050565b600181811c9082168061013557607f821691505b60208210810361015557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101a557600081815260208120601f850160051c810160208610156101825750805b601f850160051c820191505b818110156101a15782815560010161018e565b5050505b505050565b81516001600160401b038111156101c3576101c3610042565b6101d7816101d18454610121565b8461015b565b602080601f83116001811461020c57600084156101f45750858301515b600019600386901b1c1916600185901b1785556101a1565b600085815260208120601f198616915b8281101561023b5788860151825594840194600190910190840161021c565b50858210156102595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6104df806102786000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063759014f01461003b5780639e93e5d414610059575b600080fd5b61004361006e565b60405161005091906101d4565b60405180910390f35b61006c61006736600461021d565b610100565b005b60606000805461007d906102ce565b80601f01602080910402602001604051908101604052809291908181526020018280546100a9906102ce565b80156100f65780601f106100cb576101008083540402835291602001916100f6565b820191906000526020600020905b8154815290600101906020018083116100d957829003601f168201915b5050505050905090565b806040516020016101119190610308565b6040516020818303038152906040528051906020012060006040516020016101399190610324565b60405160208183030381529060405280519060200120036101a05760405162461bcd60e51b815260206004820152601860248201527f4368616c6c656e676520616c7265616479206578697374730000000000000000604482015260640160405180910390fd5b60006101ac82826103e9565b5050565b60005b838110156101cb5781810151838201526020016101b3565b50506000910152565b60208152600082518060208401526101f38160408501602087016101b0565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561022f57600080fd5b813567ffffffffffffffff8082111561024757600080fd5b818401915084601f83011261025b57600080fd5b81358181111561026d5761026d610207565b604051601f8201601f19908116603f0116810190838211818310171561029557610295610207565b816040528281528760208487010111156102ae57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806102e257607f821691505b60208210810361030257634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161031a8184602087016101b0565b9190910192915050565b6000808354610332816102ce565b6001828116801561034a576001811461035f5761038e565b60ff198416875282151583028701945061038e565b8760005260208060002060005b858110156103855781548a82015290840190820161036c565b50505082870194505b50929695505050505050565b601f8211156103e457600081815260208120601f850160051c810160208610156103c15750805b601f850160051c820191505b818110156103e0578281556001016103cd565b5050505b505050565b815167ffffffffffffffff81111561040357610403610207565b6104178161041184546102ce565b8461039a565b602080601f83116001811461044c57600084156104345750858301515b600019600386901b1c1916600185901b1785556103e0565b600085815260208120601f198616915b8281101561047b5788860151825594840194600190910190840161045c565b50858210156104995787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212205f086b9855aad1117e098789d78fd626f147b0622aa53618ba508effe40a1c7e64736f6c63430008150033",
    "sourceMap": "65:490:0:-:0;;;121:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;169:9;:22;181:10;169:9;:22;:::i;:::-;;121:77;65:490;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:3;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:3;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:3;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:3;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:3;;;3627:26;3578:89;-1:-1:-1;;2382:1:3;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:3;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:3;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:3;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:3:o;:::-;65:490:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063759014f01461003b5780639e93e5d414610059575b600080fd5b61004361006e565b60405161005091906101d4565b60405180910390f35b61006c61006736600461021d565b610100565b005b60606000805461007d906102ce565b80601f01602080910402602001604051908101604052809291908181526020018280546100a9906102ce565b80156100f65780601f106100cb576101008083540402835291602001916100f6565b820191906000526020600020905b8154815290600101906020018083116100d957829003601f168201915b5050505050905090565b806040516020016101119190610308565b6040516020818303038152906040528051906020012060006040516020016101399190610324565b60405160208183030381529060405280519060200120036101a05760405162461bcd60e51b815260206004820152601860248201527f4368616c6c656e676520616c7265616479206578697374730000000000000000604482015260640160405180910390fd5b60006101ac82826103e9565b5050565b60005b838110156101cb5781810151838201526020016101b3565b50506000910152565b60208152600082518060208401526101f38160408501602087016101b0565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561022f57600080fd5b813567ffffffffffffffff8082111561024757600080fd5b818401915084601f83011261025b57600080fd5b81358181111561026d5761026d610207565b604051601f8201601f19908116603f0116810190838211818310171561029557610295610207565b816040528281528760208487010111156102ae57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806102e257607f821691505b60208210810361030257634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161031a8184602087016101b0565b9190910192915050565b6000808354610332816102ce565b6001828116801561034a576001811461035f5761038e565b60ff198416875282151583028701945061038e565b8760005260208060002060005b858110156103855781548a82015290840190820161036c565b50505082870194505b50929695505050505050565b601f8211156103e457600081815260208120601f850160051c810160208610156103c15750805b601f850160051c820191505b818110156103e0578281556001016103cd565b5050505b505050565b815167ffffffffffffffff81111561040357610403610207565b6104178161041184546102ce565b8461039a565b602080601f83116001811461044c57600084156104345750858301515b600019600386901b1c1916600185901b1785556103e0565b600085815260208120601f198616915b8281101561047b5788860151825594840194600190910190840161045c565b50858210156104995787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212205f086b9855aad1117e098789d78fd626f147b0622aa53618ba508effe40a1c7e64736f6c63430008150033",
    "sourceMap": "65:490:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:248;;;;;;:::i;:::-;;:::i;:::-;;458:95;505:13;537:9;530:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:95;:::o;204:248::-;366:13;349:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;339:42;;;;;;312:9;295:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;285:38;;;;;;:96;277:133;;;;-1:-1:-1;;;277:133:0;;3583:2:3;277:133:0;;;3565:21:3;3622:2;3602:18;;;3595:30;3661:26;3641:18;;;3634:54;3705:18;;277:133:0;;;;;;;;420:9;:25;432:13;420:9;:25;:::i;:::-;;204:248;:::o;14:250:3:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:3;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:3;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:3:o;670:127::-;731:10;726:3;722:20;719:1;712:31;762:4;759:1;752:15;786:4;783:1;776:15;802:922;871:6;924:2;912:9;903:7;899:23;895:32;892:52;;;940:1;937;930:12;892:52;980:9;967:23;1009:18;1050:2;1042:6;1039:14;1036:34;;;1066:1;1063;1056:12;1036:34;1104:6;1093:9;1089:22;1079:32;;1149:7;1142:4;1138:2;1134:13;1130:27;1120:55;;1171:1;1168;1161:12;1120:55;1207:2;1194:16;1229:2;1225;1222:10;1219:36;;;1235:18;;:::i;:::-;1310:2;1304:9;1278:2;1364:13;;-1:-1:-1;;1360:22:3;;;1384:2;1356:31;1352:40;1340:53;;;1408:18;;;1428:22;;;1405:46;1402:72;;;1454:18;;:::i;:::-;1494:10;1490:2;1483:22;1529:2;1521:6;1514:18;1569:7;1564:2;1559;1555;1551:11;1547:20;1544:33;1541:53;;;1590:1;1587;1580:12;1541:53;1646:2;1641;1637;1633:11;1628:2;1620:6;1616:15;1603:46;1691:1;1669:15;;;1686:2;1665:24;1658:35;;;;-1:-1:-1;1673:6:3;802:922;-1:-1:-1;;;;;802:922:3:o;1729:380::-;1808:1;1804:12;;;;1851;;;1872:61;;1926:4;1918:6;1914:17;1904:27;;1872:61;1979:2;1971:6;1968:14;1948:18;1945:38;1942:161;;2025:10;2020:3;2016:20;2013:1;2006:31;2060:4;2057:1;2050:15;2088:4;2085:1;2078:15;1942:161;;1729:380;;;:::o;2114:289::-;2245:3;2283:6;2277:13;2299:66;2358:6;2353:3;2346:4;2338:6;2334:17;2299:66;:::i;:::-;2381:16;;;;;2114:289;-1:-1:-1;;2114:289:3:o;2534:842::-;2662:3;2691:1;2724:6;2718:13;2754:36;2780:9;2754:36;:::i;:::-;2809:1;2826:18;;;2853:133;;;;3000:1;2995:356;;;;2819:532;;2853:133;-1:-1:-1;;2886:24:3;;2874:37;;2959:14;;2952:22;2940:35;;2931:45;;;-1:-1:-1;2853:133:3;;2995:356;3026:6;3023:1;3016:17;3056:4;3101:2;3098:1;3088:16;3126:1;3140:165;3154:6;3151:1;3148:13;3140:165;;;3232:14;;3219:11;;;3212:35;3275:16;;;;3169:10;;3140:165;;;3144:3;;;3334:6;3329:3;3325:16;3318:23;;2819:532;-1:-1:-1;3367:3:3;;2534:842;-1:-1:-1;;;;;;2534:842:3:o;3734:545::-;3836:2;3831:3;3828:11;3825:448;;;3872:1;3897:5;3893:2;3886:17;3942:4;3938:2;3928:19;4012:2;4000:10;3996:19;3993:1;3989:27;3983:4;3979:38;4048:4;4036:10;4033:20;4030:47;;;-1:-1:-1;4071:4:3;4030:47;4126:2;4121:3;4117:12;4114:1;4110:20;4104:4;4100:31;4090:41;;4181:82;4199:2;4192:5;4189:13;4181:82;;;4244:17;;;4225:1;4214:13;4181:82;;;4185:3;;;3825:448;3734:545;;;:::o;4455:1352::-;4581:3;4575:10;4608:18;4600:6;4597:30;4594:56;;;4630:18;;:::i;:::-;4659:97;4749:6;4709:38;4741:4;4735:11;4709:38;:::i;:::-;4703:4;4659:97;:::i;:::-;4811:4;;4875:2;4864:14;;4892:1;4887:663;;;;5594:1;5611:6;5608:89;;;-1:-1:-1;5663:19:3;;;5657:26;5608:89;-1:-1:-1;;4412:1:3;4408:11;;;4404:24;4400:29;4390:40;4436:1;4432:11;;;4387:57;5710:81;;4857:944;;4887:663;2481:1;2474:14;;;2518:4;2505:18;;-1:-1:-1;;4923:20:3;;;5041:236;5055:7;5052:1;5049:14;5041:236;;;5144:19;;;5138:26;5123:42;;5236:27;;;;5204:1;5192:14;;;;5071:19;;5041:236;;;5045:3;5305:6;5296:7;5293:19;5290:201;;;5366:19;;;5360:26;-1:-1:-1;;5449:1:3;5445:14;;;5461:3;5441:24;5437:37;5433:42;5418:58;5403:74;;5290:201;-1:-1:-1;;;;;5537:1:3;5521:14;;;5517:22;5504:36;;-1:-1:-1;4455:1352:3:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getChallenge()": "759014f0",
    "setNewChallenge(string)": "9e93e5d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_challenge\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getChallenge\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newChallenge\",\"type\":\"string\"}],\"name\":\"setNewChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Challenge.sol\":\"Challenge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Challenge.sol\":{\"keccak256\":\"0x47ffcc7efb837716df3eaca9255f0bfa6d66c9369eec948295e9fb5a20a05a81\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9822e287e3a8d88bb7d1f6d43a38c63699a0d1385dc3ab776f88926bec326519\",\"dweb:/ipfs/QmUkFLDuFkLucDWLW1en1MuxJPMvdUBbHbj4Ty4dmJC32D\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_challenge",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getChallenge",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newChallenge",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNewChallenge"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Challenge.sol": "Challenge"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Challenge.sol": {
        "keccak256": "0x47ffcc7efb837716df3eaca9255f0bfa6d66c9369eec948295e9fb5a20a05a81",
        "urls": [
          "bzz-raw://9822e287e3a8d88bb7d1f6d43a38c63699a0d1385dc3ab776f88926bec326519",
          "dweb:/ipfs/QmUkFLDuFkLucDWLW1en1MuxJPMvdUBbHbj4Ty4dmJC32D"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Challenge.sol",
    "id": 50,
    "exportedSymbols": {
      "Challenge": [
        49
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:517:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "39:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 49,
        "nodeType": "ContractDefinition",
        "src": "65:490:0",
        "nodes": [
          {
            "id": 3,
            "nodeType": "VariableDeclaration",
            "src": "90:24:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "challenge",
            "nameLocation": "105:9:0",
            "scope": 49,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "90:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 13,
            "nodeType": "FunctionDefinition",
            "src": "121:77:0",
            "nodes": [],
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "159:39:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8,
                      "name": "challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "169:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9,
                      "name": "_challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "181:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "169:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "169:22:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_challenge",
                  "nameLocation": "147:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "133:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "133:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "132:26:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:0:0"
            },
            "scope": 49,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40,
            "nodeType": "FunctionDefinition",
            "src": "204:248:0",
            "nodes": [],
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "267:185:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 22,
                                  "name": "challenge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3,
                                  "src": "312:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 20,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "295:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 21,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "299:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "295:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 23,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "295:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 19,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "285:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "285:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28,
                                  "name": "_newChallenge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15,
                                  "src": "366:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 26,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "349:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 27,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "353:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "349:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "349:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 25,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "339:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "339:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "285:96:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676520616c726561647920657869737473",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "383:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a28f1f258e775e62b3648fa89f5f9630d13a0fd37d87fe574b872864a93601e4",
                          "typeString": "literal_string \"Challenge already exists\""
                        },
                        "value": "Challenge already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a28f1f258e775e62b3648fa89f5f9630d13a0fd37d87fe574b872864a93601e4",
                          "typeString": "literal_string \"Challenge already exists\""
                        }
                      ],
                      "id": 18,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "277:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:133:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "277:133:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "420:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36,
                      "name": "_newChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "432:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "420:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "420:25:0"
                }
              ]
            },
            "functionSelector": "9e93e5d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewChallenge",
            "nameLocation": "213:15:0",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_newChallenge",
                  "nameLocation": "243:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "229:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "228:29:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:0"
            },
            "scope": 49,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48,
            "nodeType": "FunctionDefinition",
            "src": "458:95:0",
            "nodes": [],
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "520:33:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45,
                    "name": "challenge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "537:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "530:16:0"
                }
              ]
            },
            "functionSelector": "759014f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallenge",
            "nameLocation": "467:12:0",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:2:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "505:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:15:0"
            },
            "scope": 49,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Challenge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49
        ],
        "name": "Challenge",
        "nameLocation": "74:9:0",
        "scope": 50,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 0
}